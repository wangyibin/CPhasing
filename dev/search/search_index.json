{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Installation","text":"C-Phasing <p> Phasing and scaffolding polyploid genomes based on Pore-C, Ultra-long, or Hi-C data</p> <p>.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>One of the major problems with Hi-C scaffolding of polyploid genomes is a large proportion of ambiguous short-read mapping, leading to a high-level of switched or chimeric assemblies. Now, the long-read-based chromosome conformation capture technology, e.g., Pore-C, provides an effective way to overcome this problem. Here, we developed a new pipeline, namely <code>C-Phasing</code>, which is specifically tailored for polyploid phasing by leveraging the advantage of Pore-C data. It also works on Hi-C data and diploid genome assembly.  </p> <p>The advantages of <code>C-Phasing</code>:      - High speed.      - High anchor rate of genome.     - High accuracy of polyploid phasing.   </p>"},{"location":"#installation","title":"Installation","text":"recommendedcondacustom <p>Download the CPhasing and activate environments by the <code>activate_cphasing</code> <pre><code>git clone https://github.com/wangyibin/CPhasing.git \n\n### activate environment\nsource ./CPhasing/bin/activate_cphasing\n\n### deactivate\nsource deactivate \n</code></pre></p> <p>Note</p> <p>For the first configuration, run it when the network is accessible.</p> <p>Note</p> <p>If you do not have direct access to the anaconda repository, you can set the mirror for pixi.</p> <p>Download the CPhasing and install environment by conda <pre><code>git clone https://github.com/wangyibin/CPhasing.git\n\ncd CPhasing\nconda env create -f environment.yml\nconda activate cphasing\n</code></pre> Add the following to the <code>~/.bash_profile</code> ~/.bash_profile<pre><code>export PATH=/path/to/CPhasing/bin:$PATH\nexport PYTHONPATH=/path/to/CPhasing:$PYTHONPATH\n</code></pre></p> <p>Note</p> <p>The hic pipeline require GLIBCXX_3.4.29, or you can add the following to the start of cphasing execute script, e.g.: <code>run.sh</code> run.sh<pre><code>export LD_LIBRARY_PATH=/path/to/anaconda3/envs/cphasing/lib:$LD_LIBRARY_PATH\n</code></pre></p> <ul> <li>Basic Usage <p>Use <code>pipeline</code> to run <code>cphasing</code>.  </p> <p>Basic Usage</p> </li> </ul> <ul> <li>Tutorials <p>Tutorials to help you know how to run <code>cphasing</code>. Tutorials</p> </li> </ul>"},{"location":"#install-c-phasing","title":"Install C-Phasing","text":"<p><pre><code>## Download C-Phasing and install python dependencies\ngit clone https://github.com/wangyibin/CPhasing.git\ncd CPhasing\npip install .\n</code></pre> Add following to the <code>~/.bash_profile</code> or <code>~/.bashrc</code> ~/.bash_profile<pre><code>export PATH=/path/to/CPhasing/bin:$PATH\n</code></pre></p>"},{"location":"#dependencies","title":"Dependencies","text":"<ol> <li>For core function     - bedtools     - seqkit     - pigz </li> <li>For Pore-C pipeline     - minimap2(&gt;= v2.24)  </li> </ol>"},{"location":"basic_usage/","title":"Basic Usage","text":""},{"location":"basic_usage/#one-command-pipeline-of-c-phasing","title":"One command pipeline of C-Phasing","text":""},{"location":"basic_usage/#pipeline","title":"pipeline","text":"<p>The <code>-n 8:4</code> parameter of the following commands means assembling a tetraploid (4) with 8 chromosome basic numbers. If you set <code>-n 0:0</code> means partition in both rounds automatically, also support it set to <code>-n 8:0</code> or <code>-n 0:4</code>.  </p> <p>Note</p> <p><code>CPhasing</code> also support the monoploid scaffolding, when you set one group number, e.g. <code>-n 8</code>. The <code>pipeline</code> will automatically skip the step <code>1.alleles</code>, and only run one round partition.</p>"},{"location":"basic_usage/#start-from-a-pore-c-data","title":"Start from a pore-c data:","text":"<pre><code>cphasing pipeline -f draft.asm.fasta -pcd sample.fastq.gz -t 10 -n 8:4\n</code></pre>"},{"location":"basic_usage/#start-from-multiple-pore-c-data","title":"Start from multiple pore-c data:","text":"<p>specify multiple <code>-pcd</code> parameters.  <pre><code>cphasing pipeline -f draft.asm.fasta -pcd sample1.fastq.gz -pcd sample2.fastq.gz -t 10 -n 8:4\n</code></pre></p> <p>Note</p> <p>If you want to run on cluster system and submit them to multiple nodes, you can use <code>cphasing mapper</code> and <code>cphasing-rs porec-merge</code> to generate the merged <code>porec.gz</code> file and input it by <code>-pct</code> parameter. </p>"},{"location":"basic_usage/#start-from-a-pore-c-table-porecgz","title":"Start from a pore-c table (porec.gz):","text":"<p>which is generated by <code>cphasing mapper</code>. <pre><code>cphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -n 8:4\n</code></pre></p>"},{"location":"basic_usage/#start-from-a-paired-end-hi-c-data","title":"Start from a paired-end Hi-C data","text":"<pre><code>cphasing pipeline -f draft.asm.fasta -hic1 Lib_R1.fastq.gz -hic2 Lib_R2.fastq.gz -t 10 -n 8:4\n</code></pre> <p>Note</p> <ul> <li>1 | If you want to run multiple samples, you can use <code>cphasing hic mapper</code> and <code>cphasing-rs pairs-merge</code> to generate the merged <code>pairs.gz</code> file, and input it by <code>-prs</code> parameter.  </li> <li>2 | If the total length of your input genome is larger than 8 Gb, the <code>-hic-mapper-k 27 -hic-mapper-w 14</code> should be specified, to avoid the error of chromap. </li> </ul>"},{"location":"basic_usage/#start-from-a-4dn-pairs-file","title":"Start from a 4DN pairs file,","text":"<p><pre><code>cphasing pipeline -f draft.asm.fasta -prs sample.pairs.gz -t 10 -n 8:4\n</code></pre> - Skip some steps <pre><code>## skip steps 1.alleles and 2.prepare steps \ncphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -ss 1,2\n</code></pre></p>"},{"location":"basic_usage/#perform-only-specified-steps","title":"Perform only specified steps","text":"<pre><code>## run 3.hyperpartition \ncphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -s 3\n</code></pre>"},{"location":"basic_usage/#improve-performance","title":"Improve performance","text":"<p>Add the <code>-hcr</code> parameter to remove the greedy contacts (several regions contact with the whole genome) to improve the phasing quality. <pre><code>cphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -hcr\n</code></pre></p>"},{"location":"basic_usage/#curation-by-juicebox","title":"Curation by Juicebox","text":"<ul> <li>generate <code>.assembly</code> and <code>.hic</code>, depend on 3d-dna </li> </ul> <pre><code>cphasing pairs2mnd sample.pairs.gz -o sample.mnd.txt\ncphasing utils agp2assembly groups.agp &gt; groups.assembly\nbash ~/software/3d-dna/visualize/run-assembly-visualizer.sh sample.assembly sample.mnd.txt\n</code></pre> <p>Note</p> <p>if chimeric corrected, please use <code>groups.corrected.agp</code> and generate a new <code>corrected.pairs.gz</code> by <code>cphasing-rs pairs-break</code> </p> <ul> <li>After curation <pre><code>## convert assembly to agp\ncphasing utils assembly2agp groups.review.assembly -n 8:4 \n## or haploid or a homologous group\ncphasing utils assembly2agp groups.review.assembly -n 8\n## extract contigs from agp \ncphasing agp2fasta groups.review.agp draft.asm.fasta --contigs &gt; contigs.fasta\n## extract chromosome-level fasta from agp\ncphasing agp2fasta groups.review.agp draft.asm.fasta &gt; groups.review.asm.fasta\n</code></pre></li> </ul>"},{"location":"basic_usage/#rename","title":"Rename","text":"<p>Rename and orient chromosome according a monoploid reference (or genome of closely related species). <pre><code>cphasing rename -r mono.fasta -f draft.asm.fasta -a groups.review.agp -t 20\n</code></pre></p> <p>Note</p> <p>To reduce the time consumed, we only align the first haplotype (g1) to the monoploid, which the orientation among different haplotypes has already been set to the same in the <code>scaffolding</code> step. If not, you can set <code>\u2014unphased</code> to align all haplotypes to the monoploid to adjust the orientation.  </p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#the-results-of-the-first-round-partition-are-unsatisfactory","title":"The results of the first round partition are unsatisfactory.","text":"<p>In our two-round partition algorithm, the first round partition depends on the h-trans errors between homologous chromosomes; if you input a contig assembly with low level switch errors or input a high accuracy pore-c data, the h-trans will be not enough to cluster all contigs to correct homologous groups, resulting in unsatisfactory results. You can set the <code>-q1 0</code> for <code>hyperpartition</code> to increase the rate of h-trans errors. However, this parameter may raise error of <code>out of memory</code> when you input huge pore-c data in porec table or hic contacts in pairs file. </p>"},{"location":"faq/#how-to-set-the-n-parameter-when-assembling-an-aneuploid-genome","title":"How to set the <code>-n</code> parameter when assembling an aneuploid genome.","text":"<p>The aneuploid genome, such as modern cultivated sugarcane, contains unequal homologous chromosomes. The <code>-n</code> parameter can be set to zero (<code>-n 10:0</code>) to automatically partition contigs into different chromosomes within a homologous group.    However, we also allow the user to input a file with two columns: the first column is the index(1-base) of the first round partition, and the second column is the chromosome number of each homologous. And then specified the <code>-n 10:second.number.tsv</code> in <code>cphasing pipeline</code> or <code>cphasing hyperpartition</code>. - <code>second.number.tsv</code> <pre><code>1    13\n2    12\n3    12\n4    11\n5    10\n6    12\n7    12\n8    10\n9    12\n10    12\n</code></pre></p>"},{"location":"CLI/alleles/","title":"Alleles","text":"<p>Alleles aims to identify the allelic contig pairs by pairwise comparison. cphasing alleles -h<pre><code> Usage: cphasing alleles [OPTIONS]                                              \n\n Build allele table by kmer similarity.                                         \n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --fasta    -f        polyploid contig-level fasta.                        \u2502\n\u2502                         (FILE)                                               \u2502\n\u2502                         [required]                                           \u2502\n\u2502    --output   -o        path of output allele table [default:                \u2502\n\u2502                         fasta_prefix.allele.table]                           \u2502\n\u2502                         (PATH)                                               \u2502\n\u2502               -k        kmer size for similarity calculation.                \u2502\n\u2502                         (INT)                                                \u2502\n\u2502                         [default: 19]                                        \u2502\n\u2502               -w        minimizer window size for similarity calculation.    \u2502\n\u2502                         (INT)                                                \u2502\n\u2502                         [default: 19]                                        \u2502\n\u2502               -c        max occurance of allelic pairs                       \u2502\n\u2502                         (INT)                                                \u2502\n\u2502                         [default: 60]                                        \u2502\n\u2502               -n        minimum chain end                                    \u2502\n\u2502                         (INT)                                                \u2502\n\u2502                         [default: 5]                                         \u2502\n\u2502               -m        minimum k-mer similarity for similarity calculation. \u2502\n\u2502                         (FLOAT)                                              \u2502\n\u2502                         [default: 0.5; 0&lt;=x&lt;=1]                              \u2502\n\u2502               -d        minimum different threshold between contig pairs.    \u2502\n\u2502                         (FLOAT RANGE)                                        \u2502\n\u2502                         [default: 0.1; 0&lt;=x&lt;=1]                              \u2502\n\u2502    --threads  -t        Number of threads.                                   \u2502\n\u2502                         (INT)                                                \u2502\n\u2502                         [default: 4]                                         \u2502\n\u2502    --help     -h,-help  Show this message and exit.                          \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre></p>"},{"location":"CLI/alleles/#examples","title":"Examples","text":""},{"location":"CLI/alleles/#total-length-of-genome-10-gb","title":"Total length of genome &lt; 10 Gb","text":"<pre><code>cphasing alleles -f draft.asm.fasta\n</code></pre>"},{"location":"CLI/alleles/#total-length-of-genome-10-gb_1","title":"Total length of genome &gt;= 10 Gb","text":"<pre><code>cphasing alleles -f draft.asm.fasta -k 27 -w 14\n</code></pre> <p>Warning</p> <p>Now, <code>alleles</code> do not support contig with a length larger than 135 Mb. </p>"},{"location":"CLI/mapper/","title":"Mapper","text":"<p><code>cphasing mapper</code> is designed for process Pore-C data, it output two file: (1) porec table (<code>.porec.gz</code>) which contain high-order contacts and (2) 4DN pairs (<code>pairs.gz</code>) which only retain VPCs. cphasing mapper -h<pre><code> Usage: cphasing mapper [OPTIONS] REFERENCE FASTQ...   \n\n Mapper for pore-c reads.                                                  \n REFERENCE: Path of reference                                              \n\n FASTQ: Path of pore-c reads, multiple file enabled, the prefix of output  \n default only use sample 1.                                                \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  REFERENCE    (PATH) [required]                                       \u2502\n\u2502 *  FASTQ        (PATH) [required]                                       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --enzyme        -e        Restrict site pattern, use comma to separate  \u2502\n\u2502                           multiple patterns.                            \u2502\n\u2502                           (STR)                                         \u2502\n\u2502                 -k        kmer size for mapping.                        \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 15]                                 \u2502\n\u2502                 -w        minimizer window size for mapping.            \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 10]                                 \u2502\n\u2502 --mm2-params              additional parameters for minimap2            \u2502\n\u2502                           (STR)                                         \u2502\n\u2502                           [default: -x map-ont]                         \u2502\n\u2502 --mapq          -q        Minimum quality of mapping [0, 60].           \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 0; 0&lt;=x&lt;=60]                        \u2502\n\u2502 --min-identity  -p        Minimum percentage identity of alignments [0, \u2502\n\u2502                           1.0].                                         \u2502\n\u2502                           (FLOAT)                                       \u2502\n\u2502                           [default: 0.8; 0.0&lt;=x&lt;=1.0]                   \u2502\n\u2502 --min-length    -l        Minimum length of fragments.                  \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 150]                                \u2502\n\u2502 --max-edge      -me       Maximum length of fragment located in the     \u2502\n\u2502                           edge of contigs.                              \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 2000]                               \u2502\n\u2502 --force         -f        Force run all the command, ignore existing    \u2502\n\u2502                           results. The index file also will be removed. \u2502\n\u2502 --outprefix     -o        output prefix, if none use the prefix of      \u2502\n\u2502                           fastq                                         \u2502\n\u2502                           (TEXT)                                        \u2502\n\u2502 --threads       -t        Number of threads.                            \u2502\n\u2502                           (INT)                                         \u2502\n\u2502                           [default: 4]                                  \u2502\n\u2502 --help          -h,-help  Show this message and exit.                   \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre></p>"},{"location":"CLI/mapper/#examples","title":"Examples","text":""},{"location":"CLI/mapper/#process-one-cell-porec-data","title":"process one cell porec data","text":"<pre><code>cphasing mapper draft.contigs.fasta sample.porec.fastq.gz -t 40 \n</code></pre>"},{"location":"CLI/mapper/#process-multiple-cell-porec-data","title":"process multiple cell porec data","text":""},{"location":"CLI/mapper/#process-together","title":"Process together","text":"<p><pre><code>cphasing mapper draft.contigs.fasta sample1.porec.fastq.gz sample2.porec.fastq.gz -t 40 \n</code></pre> or  <pre><code>cphasing mapper draft.contigs.fasta sample*.porec.fastq.gz -t 40 \n</code></pre></p> <p>Note</p> <p>It will output results using the <code>sample1.porec</code> as the prefix</p>"},{"location":"CLI/mapper/#submit-each-cell-to-the-cluster","title":"Submit each cell to the cluster","text":"<ul> <li>use multiple scripts to run mapper for each sample run_sample1.sh<pre><code>cphasing mapper draft.contigs.fasta sample1.porec.fastq.gz -t 40\n</code></pre> run_sample2.sh<pre><code>cphasing mapper draft.contigs.fasta sample2.porec.fastq.gz -t 40\n</code></pre> run_sample3.sh<pre><code>cphasing mapper draft.contigs.fasta sample3.porec.fastq.gz -t 40\n</code></pre></li> </ul> <ul> <li>merge results  <pre><code>cphasing-rs porec-merge sample1.porec.porec.gz sample2.porec.porec.gz sample3.porec.porec.gz -o sample.merge.porec.gz\ncphasing-rs pairs-merge sample1.porec.pairs.gz sample2.porec.pairs.gz sample3.porec.pairs.gz -o sample.merge.pairs.gz\n</code></pre></li> </ul>"},{"location":"CLI/plot/","title":"Plot","text":"cphasing plot -h<pre><code> Usage: cphasing plot [OPTIONS]                                                 \n\n Adjust or Plot the contacts matrix after assembling.                           \n\n \u258c Usage:                                                                       \n \u258c  \u2022 adjust the matrix by agp and plot a heatmap                               \n\n\n  cphasing plot -a groups.agp -m sample.10000.cool -o groups.500k.wg.png        \n\n\n \u258c  \u2022 adjust the matrix by agp and plot a 100k resolution heatmap               \n\n\n  cphasing plot -a groups.agp \\                                                 \n      -m sample.10000.cool \\                                                    \n      -o groups.100k.wg.png \\                                                   \n      -bs 100k                                                                  \n\n\n \u258c  \u2022 only plot a heatmap                                                       \n\n\n  cphasing plot -m sample.100k.cool -o sample.100k.png                          \n\n\n \u258c  \u2022 Plot some chromosomes                                                     \n\n\n  cphasing plot -m sample.100k.cool -c Chr01,Chr02 -o Chr01_Chr02.100k.png      \n\n\n\u256d\u2500 Options of Matrix Operation \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --matrix        -m   Contacts matrix stored by Cool format.               \u2502\n\u2502                         (COOL)                                               \u2502\n\u2502                         [required]                                           \u2502\n\u2502    --binsize       -bs  Bin size of the heatmap you want to plot.  Enabled   \u2502\n\u2502                         suffix with k or m. [defalt: input matrix binsize]   \u2502\n\u2502                         (STR)                                                \u2502\n\u2502    --only-coarsen       Only coarsen the input matrix, do not need plot the  \u2502\n\u2502                         heatmap.                                             \u2502\n\u2502    --balance            balance the matrix.                                  \u2502\n\u2502    --balanced           Plot balanced values, which need cool have weights   \u2502\n\u2502                         columns in bins.                                     \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Options of AGP Adjustment \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --agp          -a  (AGP)                                                     \u2502\n\u2502 --only-adjust      Only adjust the matrix by agp, do not need plot the       \u2502\n\u2502                    heatmap.                                                  \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Options of Heatmap \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --chromosomes                     -c         Chromosomes and order in which  \u2502\n\u2502                                              the chromosomes should be       \u2502\n\u2502                                              plotted. Comma seperated. or a  \u2502\n\u2502                                              one column file                 \u2502\n\u2502                                              (TEXT)                          \u2502\n\u2502 --disable-natural-sort            -dns       Disable natural sort of         \u2502\n\u2502                                              chromosomes, only used for      \u2502\n\u2502                                              --chromosomes or --only-chr     \u2502\n\u2502 --per-chromosomes,--per-chromos\u2026  -pc        Instead of plotting the whole   \u2502\n\u2502                                              matrix, each chromosome is      \u2502\n\u2502                                              plotted next to the other.      \u2502\n\u2502 --only-chr                        -oc        Only plot the chromosomes that  \u2502\n\u2502                                              ignore unanchored contigs. When \u2502\n\u2502                                              --chromosomes specifed, this    \u2502\n\u2502                                              parameter will be ignored. The  \u2502\n\u2502                                              default use prefix of Chr to    \u2502\n\u2502                                              find the chromosomes.           \u2502\n\u2502                                              --chr-prefix can be used to     \u2502\n\u2502                                              change this.                    \u2502\n\u2502 --chr-prefix                      -cp        Prefix of the chromosomes, only \u2502\n\u2502                                              used for --only-chr             \u2502\n\u2502                                              (STR)                           \u2502\n\u2502                                              [default: Chr]                  \u2502\n\u2502 --chrom-per-row                   -cpr       Number of chromosome plot in    \u2502\n\u2502                                              each row                        \u2502\n\u2502                                              (INTEGER)                       \u2502\n\u2502                                              [default: 4]                    \u2502\n\u2502 --vmin                            -vmin      (FLOAT)                         \u2502\n\u2502 --vmax                            -vmax      (FLOAT)                         \u2502\n\u2502 --scale                           -s         Method of contact normalization \u2502\n\u2502                                              (STR)                           \u2502\n\u2502                                              [default: log1p]                \u2502\n\u2502 --triangle                                   Plot the heatmap in triangle    \u2502\n\u2502 --fontsize                                   Fontsize of the ticks, default  \u2502\n\u2502                                              is auto                         \u2502\n\u2502                                              (INT)                           \u2502\n\u2502 --dpi                             -dpi       Resolution for the image.       \u2502\n\u2502                                              (INTEGER)                       \u2502\n\u2502                                              [default: 600]                  \u2502\n\u2502 --cmap,--colormap                 -cmap,-cm  Colormap of heatmap. Available  \u2502\n\u2502                                              values can be seen :            \u2502\n\u2502                                              https://pratiman-91.github.io/\u2026 \u2502\n\u2502                                              and                             \u2502\n\u2502                                              http://matplotlib.org/examples\u2026 \u2502\n\u2502                                              and whitered .                  \u2502\n\u2502                                              (TEXT)                          \u2502\n\u2502                                              [default: redp1_r]              \u2502\n\u2502 --no-lines                        -nl        Don't add dash line in          \u2502\n\u2502                                              chromosome boundaries.          \u2502\n\u2502 --no-ticks                        -nt        Don't add ticks both in x axis  \u2502\n\u2502                                              and y axis.                     \u2502\n\u2502 --rotate-xticks                   -rx        Rotate the x ticks              \u2502\n\u2502                                              [default: True]                 \u2502\n\u2502 --rotate-yticks                   -ry        Rotate the x ticks              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Global Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --output   -o        Output path of file.                                    \u2502\n\u2502                      (TEXT)                                                  \u2502\n\u2502                      [default: plot.heatmap.png]                             \u2502\n\u2502 --threads  -t        Number of threads. (unused)                             \u2502\n\u2502                      (INT)                                                   \u2502\n\u2502                      [default: 4]                                            \u2502\n\u2502 --help     -help,-h  Show this message and exit.                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"CLI/plot/#examples","title":"Examples","text":""},{"location":"CLI/plot/#plot-from-agp-and-contig-level-cool","title":"Plot from <code>.agp</code> and contig-level <code>.cool</code>","text":"<pre><code>cphasing plot -a groups.agp -m sample.10000.cool -o groups.500k.wg.png   \n</code></pre> <p>Note</p> <p>This function will generate two intermedia <code>sample.10000.chrom.cool</code> and <code>sample.500k.chrom.cool</code>.</p>"},{"location":"CLI/plot/#plot-heatmap-from-cool-file","title":"Plot heatmap from <code>.cool</code> file","text":"<pre><code>cphasing plot -m sample.500k.cool -o groups.500k.wg.png \n</code></pre>"},{"location":"tutorials/hic/hic_tetraploid/","title":"Assemble tetraploid by Hi-C","text":""},{"location":"tutorials/porec/porec_sugarcane/","title":"Assemble hybrid sugarcane by Pore-C","text":""},{"location":"tutorials/porec/porec_tetraploid/","title":"Assemble tetraploid by Pore-C","text":""},{"location":"zh/","title":"\u5b89\u88c5","text":"C-Phasing <p> Phasing and scaffolding polyploid genomes based on Pore-C, Ultra-long, or Hi-C data</p> <p>.</p>"},{"location":"zh/#_1","title":"\u4ecb\u7ecd","text":"<p>\u4f7f\u7528Hi-C\u6570\u636e\u5b9e\u73b0\u591a\u500d\u4f53\u57fa\u56e0\u7ec4\u5206\u578b\u6302\u8f7d\uff0c\u5b58\u5728\u4e3b\u8981\u95ee\u9898\u4e4b\u4e00\u662f\u5927\u91cf\u4e0d\u660e\u786e\u7684\u77ed\u8bfb\u957f\u6bd4\u5bf9\uff0c\u8fd9\u5bb9\u6613\u5bfc\u81f4\u9ad8\u6c34\u5e73\u7684\u4ea4\u6362\u6216\u5d4c\u5408\u7ec4\u88c5\u9519\u8bef\u3002\u73b0\u5728\uff0c\u57fa\u4e8e\u957f\u8bfb\u957f\u7684\u67d3\u8272\u4f53\u6784\u8c61\u6355\u83b7\u6280\u672f\uff0c\u5982Pore-C\uff0c\u4e3a\u514b\u670d\u8fd9\u4e00\u95ee\u9898\u63d0\u4f9b\u4e86\u6709\u6548\u9014\u5f84\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u7684\u6d41\u7a0b\uff0c\u5373\u201cC-Phasing\u201d\uff0c\u5b83\u662f\u4e13\u95e8\u4e3a\u591a\u500d\u4f53\u5206\u578b\u7ec4\u88c5\u91cf\u8eab\u5b9a\u5236\u7684\uff0c\u65e8\u5728\u5145\u5206\u5229\u7528Pore-C\u6570\u636e\u7684\u4f18\u52bf\u3002\u5b83\u4e5f\u53ef\u7528\u4e8eHi-C\u6570\u636e\u548c\u4e8c\u500d\u4f53\u57fa\u56e0\u7ec4\u7ec4\u88c5\u3002</p> <p><code>C-Phasing</code>\u7684\u4f18\u52bf:      - \u5feb\u901f.      - \u66f4\u9ad8\u7684\u6302\u8f7d\u7387.     - \u66f4\u9ad8\u7684\u5206\u578b\u7ec4\u88c5\u8d28\u91cf.</p>"},{"location":"zh/#_2","title":"\u5b89\u88c5","text":"recommendedcondacustom <p>\u4eceGitHub\u5b98\u7f51\u4e0b\u8f7d<code>C-Phasing</code>\u8f6f\u4ef6\uff0c\u5e76\u8fd0\u884c<code>activate_cphasing</code>\u6fc0\u6d3b\u73af\u5883\u3002 <pre><code>git clone https://github.com/wangyibin/CPhasing.git\n\n./CPhasing/bin/activate_cphasing\n</code></pre></p> <p>Note</p> <p>\u7b2c\u4e00\u6b21\u914d\u7f6e\u9700\u8981\u5728\u6709\u7f51\u7edc\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c<code>./CPhasing/bin/activate_cphasing</code>.</p> <p>Note</p> <p>\u5982\u679c\u4f60\u7684\u670d\u52a1\u5668\u4e0d\u80fd\u8bbf\u95eeanaconda\u7684\u4ed3\u5e93\uff0c\u53ef\u4ee5\u914d\u7f6e\u955c\u50cf\u6e90\uff0c\u5982\u914d\u7f6e\u6d59\u6c5f\u5927\u5b66\u7684\u955c\u50cf\u6e90\uff1a 1. \u6253\u5f00\u914d\u7f6e\u6587\u4ef6 <pre><code>~/.pixi/bin/pixi config edit\n</code></pre> 2. \u5199\u5165\u4ee5\u4e0b\u5185\u5bb9 <pre><code>[mirrors]\n\"https://conda.anaconda.org/conda-forge\" = [\n    \"https://mirrors.zju.edu.cn/anaconda/cloud/conda-forge\"\n]\n\n\"https://conda.anaconda.org/bioconda\" = [\n    \"https://mirrors.zju.edu.cn/anaconda/cloud/bioconda\"\n]\n</code></pre> 3. \u6309<code>ctrl + X</code>\uff0c\u7136\u540e\u518d\u6309<code>Y</code>, \u4fdd\u5b58\u9000\u51fa</p> <p>\u4eceGitHub\u5b98\u7f51\u4e0b\u8f7d<code>C-Phasing</code>\u8f6f\u4ef6\uff0c\u4f7f\u7528anaconda\u6216\u8005miniconda\u914d\u7f6e\u73af\u5883\u548c\u6fc0\u6d3b\u73af\u5883\u3002 <pre><code>git clone https://github.com/wangyibin/CPhasing.git\n\ncd CPhasing\nconda env create -f environment.yml\nconda activate cphasing\n</code></pre> \u63a5\u7740\u914d\u7f6e\u4ee5\u4e0b\u547d\u4ee4\u9053\u73af\u5883\u53d8\u91cf <code>.bash_profile</code>\u6216\u8005<code>.bashrc</code> ~/.bash_profile<pre><code>export PATH=/path/to/CPhasing/bin:$PATH\nexport PYTHONPATH=/path/to/CPhasing:$PYTHONPATH\n</code></pre></p> <p>Note</p> <p>\u5728\u6bd4\u5bf9Hi-C\u6570\u636e\u7684\u65f6\u5019\uff0c\u6709\u7528\u6237\u9047\u5230\u627e\u4e0d\u5230<code>GLIBCXX_3.4.29</code>\u7684\u62a5\u9519\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u5728\u8fd0\u884c<code>cphasing</code>\u547d\u4ee4\u524d\uff0c\u914d\u7f6e\u4ee5\u4e0b\u547d\u4ee4\uff1a run.sh<pre><code>export LD_LIBRARY_PATH=/path/to/anaconda3/envs/cphasing/lib:$LD_LIBRARY_PATH\n</code></pre></p> <ul> <li>\u57fa\u672c\u7528\u6cd5 <p>\u4f7f\u7528 <code>pipeline</code>\u547d\u4ee4\u5f00\u59cb\u8fd0\u884c<code>cphasing</code>.  </p> <p>\u57fa\u672c\u7528\u6cd5</p> </li> </ul> <ul> <li>\u6559\u7a0b <p>\u4e00\u4e9b\u6848\u4f8b\u6559\u4f60\u5982\u4f55\u8fd0\u884c <code>cphasing</code>. Tutorials</p> </li> </ul>"},{"location":"zh/#githubcphasing-pip","title":"\u4eceGitHub\u4e0b\u8f7d<code>CPhasing</code>, \u7136\u540e\u4f7f\u7528<code>pip</code>\u5b89\u88c5\u3002","text":"<p><pre><code>## Download C-Phasing and install python dependencies\ngit clone https://github.com/wangyibin/CPhasing.git\ncd CPhasing\npip install .\n</code></pre> \u63a5\u7740\u914d\u7f6e\u4ee5\u4e0b\u547d\u4ee4\u9053\u73af\u5883\u53d8\u91cf <code>~/.bash_profile</code> \u6216\u8005<code>~/.bashrc</code> ~/.bash_profile<pre><code>export PATH=/path/to/CPhasing/bin:$PATH\n</code></pre></p>"},{"location":"zh/#_3","title":"\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305","text":"<ol> <li>\u6838\u5fc3\u529f\u80fd\u4f9d\u8d56\uff1a     - bedtools     - seqkit     - pigz </li> <li>Pore-C\u6d41\u7a0b\u4f9d\u8d56\uff1a     - minimap2(&gt;= v2.24)  </li> </ol>"},{"location":"zh/basic_usage/","title":"\u57fa\u672c\u7528\u6cd5","text":""},{"location":"zh/basic_usage/#_1","title":"\u6d41\u7a0b\u5316\u7684\u547d\u4ee4","text":""},{"location":"zh/basic_usage/#pipeline","title":"pipeline\u547d\u4ee4","text":"<p>\u4ee5\u4e0b\u6848\u4f8b\u4e2d\u7684\u53c2\u6570<code>-n 8:4</code>\u8868\u793a\u7ec4\u88c5\u4e00\u4e2a\u67d3\u8272\u4f53\u57fa\u6570\u4e3a8\u7684\u56db\u500d\u4f53\uff084\uff09\uff0c\u6307\u5b9a\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u5206\u7ec4\u8f93\u51fa8\u7ec4\uff0c\u7b2c\u4e8c\u6b21\u518d\u6bcf\u4e00\u7ec4\u91cc\u9762\u8f93\u51fa4\u7ec4\uff0c\u6700\u7ec8\u8f93\u51fa32\u6761\u67d3\u8272\u4f53\u3002\u6211\u4eec\u4e5f\u652f\u6301\u81ea\u52a8\u5206\u7ec4\uff0c\u53ea\u9700\u8bbe\u7f6e<code>-n 0:0</code>, \u8fd9\u8868\u793a\u4e24\u8f6e\u81ea\u52a8\u5206\u7ec4\u3002\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u5206\u62108\u7ec4\u7b2c\u4e8c\u6b21\u81ea\u52a8\u5206\u7ec4\uff08<code>-n 8:0</code>\uff09\u6216\u8005\u7b2c\u4e00\u6b21\u81ea\u52a8\u5206\u7ec4\u7b2c\u4e8c\u6b21\u52064\u7ec4\uff08<code>-n 0:8</code>)</p> <p>Note</p> <p>CPhasing\u4e5f\u652f\u6301\u5355\u5957\u57fa\u56e0\u7ec4\u7684\u6302\u8f7d\uff0c\u53ea\u9700\u8bbe\u7f6e\u4e00\u4e2a\u5206\u7ec4\u6570\uff0c\u4f8b\u5982<code>-n 8</code>\uff0c\u67d3\u8272\u4f53\u6570\u4e3a8\uff0c\u671f\u671b\u7a0b\u5e8f\u5c06contig\u5206\u62108\u6761\u67d3\u8272\u4f53\u3002<code>pipeline</code>\u4f1a\u81ea\u52a8\u8df3\u8fc7<code>1.allele</code>\u8fd9\u6b65\uff0c\u5e76\u4e14\u53ea\u6267\u884c\u4e00\u6b21contig\u5206\u7ec4.</p>"},{"location":"zh/basic_usage/#pore-c-reads","title":"\u8f93\u5165 Pore-C \u6d4b\u5e8freads:","text":"<pre><code>cphasing pipeline -f draft.asm.fasta -pcd sample.fastq.gz -t 10 -n 8:4\n</code></pre>"},{"location":"zh/basic_usage/#pore-c-data","title":"\u8f93\u5165\u591a\u7ec4 pore-c data:","text":"<p>\u6bcf\u4e2a\u6570\u636e\u6307\u5b9a\u4e00\u6b21<code>-pcd</code>\u53c2\u6570 <pre><code>cphasing pipeline -f draft.asm.fasta -pcd sample1.fastq.gz -pcd sample2.fastq.gz -t 10 -n 8:4\n</code></pre></p> <p>Note</p> <p>\u5982\u679c\u4f60\u5e0c\u671b\uff0c\u5c06\u4e0d\u540ccell\u7684\u6570\u636e\u5206\u522b\u6295\u9012\u5230\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u8dd1\uff0c\u53ef\u4ee5\u4f7f\u7528<code>cphasing mapper</code>\u53c2\u6570\uff0c\u5e76\u6700\u540e\u4f7f\u7528<code>cphasing-rs porec-merge</code>\u5c06\u8f93\u51fa\u7684<code>porec.gz</code> \u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a<code>.merge.porec.gz</code>, \u7136\u540e\u518d\u901a\u8fc7<code>-pct</code>\u53c2\u6570\u8f93\u5165\u3002</p>"},{"location":"zh/basic_usage/#pore-c-table-porecgz","title":"\u8f93\u5165 pore-c table (porec.gz):","text":"<p>\u8fd9\u79cd\u6587\u4ef6\u662f\u7531<code>cphasing mapper</code>\u4ea7\u751f\u7684. <pre><code>cphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -n 8:4\n</code></pre></p>"},{"location":"zh/basic_usage/#hi-c-data","title":"\u8f93\u5165Hi-C data\u6570\u636e","text":"<pre><code>cphasing pipeline -f draft.asm.fasta -hic1 Lib_R1.fastq.gz -hic2 Lib_R2.fastq.gz -t 10 -n 8:4\n</code></pre> <p>Note</p> <ul> <li>1 | <code>cphasing pipeline</code> \u4e0d\u652f\u6301\u8f93\u5165\u591a\u7ec4Hi-C\u6570\u636e\uff0c\u4f46\u662f\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u4f7f\u7528<code>cphasing hic mapper</code> \u8fdb\u884c\u6bd4\u5bf9\uff0c\u7136\u540e\u518d\u4f7f\u7528<code>cphasing-rs pairs-merge</code> \u5408\u5e76\u6240\u6709\u7684<code>.pairs.gz</code>\u6587\u4ef6, \u7136\u540e\u901a\u8fc7 <code>-prs</code> \u53c2\u6570\u8f93\u5165.  </li> <li>2 | \u5982\u679c\u57fa\u56e0\u7ec4\u7684\u5927\u5c0f\u5927\u4e8e8Gb\uff0c\u9700\u8981\u63d0\u9ad8\u6bd4\u5bf9\u7684<code>k</code> \u548c<code>w</code>\u7684\u5927\u5c0f\uff0c\u907f\u514d<code>chromap</code>\u62a5\u9519\uff0c\u4f8b\u5982 <code>-hic-mapper-k 27 -hic-mapper-w 14</code>.</li> </ul>"},{"location":"zh/basic_usage/#4dn-pairs","title":"\u8f93\u51654DN pairs\u6587\u4ef6","text":"<p><pre><code>cphasing pipeline -f draft.asm.fasta -prs sample.pairs.gz -t 10 -n 8:4\n</code></pre> - \u8df3\u8fc7\u4e00\u4e9b\u6b65\u9aa4 <pre><code>## skip steps 1.alleles and 2.prepare steps \ncphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -ss 1,2\n</code></pre></p>"},{"location":"zh/basic_usage/#_2","title":"\u53ea\u8dd1\u67d0\u4e00\u6b65","text":"<pre><code>## run 3.hyperpartition \ncphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -s 3\n</code></pre>"},{"location":"zh/basic_usage/#_3","title":"\u63d0\u5347\u7ec4\u88c5\u8d28\u91cf","text":"<p>\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u8bbe\u7f6e<code>-hcr</code>\u53c2\u6570\u4f1a\u4f7f\u5f97\u7ec4\u88c5\u8d28\u91cf\u66f4\u9ad8\uff0c\u867d\u7136\u8fd9\u4f1a\u8ba9\u8fd0\u884c\u901f\u5ea6\u53d8\u6162\uff0c\u4f46\u662f\u8be5\u53c2\u6570\u7684\u8bbe\u7f6e\u53ef\u4ee5\u6709\u6548\u53bb\u9664\u4e00\u4e9b\u5728\u5168\u57fa\u56e0\u7ec4\u9891\u7e41\u4e92\u4f5c\u7684\u533a\u57df\u5bf9\u5206\u578b\u7684\u5f71\u54cd\u3002 <pre><code>cphasing pipeline -f draft.asm.fasta -pct sample.porec.gz -t 10 -hcr\n</code></pre></p>"},{"location":"zh/basic_usage/#juicebox","title":"\u901a\u8fc7Juicebox \u4eba\u5de5\u8c03\u6574\u57fa\u56e0\u7ec4\u7ec4\u88c5","text":"<ul> <li>\u9996\u5148\u9700\u8981\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff1a<code>.assembly</code> \u548c <code>.hic</code>, \u4ee5\u4e0b\u6b65\u9aa4\u4f9d\u8d56\u4e8e3d-dna \u8f6f\u4ef6\uff0c\u7528\u6237\u9700\u81ea\u884c\u5b89\u88c5\u3002</li> </ul> <pre><code>cphasing pairs2mnd sample.pairs.gz -o sample.mnd.txt\ncphasing utils agp2assembly groups.agp &gt; groups.assembly\nbash ~/software/3d-dna/visualize/run-assembly-visualizer.sh sample.assembly sample.mnd.txt\n</code></pre> <p>Note</p> <p>if chimeric corrected, please use <code>groups.corrected.agp</code> and generate a new <code>corrected.pairs.gz</code> by <code>cphasing-rs pairs-break</code> </p> <ul> <li>\u8c03\u6574\u5b8c\u540e\u751f\u6210agp\u548cfasta\u6587\u4ef6 <pre><code>## convert assembly to agp\ncphasing utils assembly2agp groups.review.assembly -n 8:4 \n## or haploid or a homologous group\ncphasing utils assembly2agp groups.review.assembly -n 8\n## extract contigs from agp \ncphasing agp2fasta groups.review.agp draft.asm.fasta --contigs &gt; contigs.fasta\n## extract chromosome-level fasta from agp\ncphasing agp2fasta groups.review.agp draft.asm.fasta &gt; groups.review.asm.fasta\n</code></pre></li> </ul>"},{"location":"zh/basic_usage/#_4","title":"\u6839\u636e\u53c2\u8003\u57fa\u56e0\u7ec4\u91cd\u65b0\u547d\u540d\u548c\u8c03\u6574\u6574\u6761\u67d3\u8272\u4f53\u7684\u65b9\u5411","text":"<p>\u6211\u4eec\u5185\u7f6e\u4e86<code>cphasing rename</code>\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u53ef\u4ee5\u6839\u636e\u4e00\u5957\u5355\u500d\u578b\u6216\u8005\u8fd1\u7f18\u7269\u79cd\u7684\u67d3\u8272\u4f53\u6c34\u5e73\u57fa\u56e0\u7ec4\u53bb\u8c03\u6574\u591a\u500d\u4f53\u5206\u578b\u7ec4\u88c5\u7684\u67d3\u8272\u4f53\u7f16\u53f7\u548c\u6574\u6761\u67d3\u8272\u4f53\u7684\u65b9\u5411\u65b9\u5411 <pre><code>cphasing rename -r mono.fasta -f draft.asm.fasta -a groups.review.agp -t 20\n</code></pre></p> <p>Note</p> <p>\u4e3a\u4e86\u51cf\u5c11\u65f6\u95f4\u6d88\u8017\uff0c\u6211\u4eec\u53ea\u5bf9\u6bcf\u5957\u540c\u6e90\u67d3\u8272\u4f53\u7ec4\u5185\u7684\u7b2c\u4e00\u6761\u8fdb\u884c\u6bd4\u5bf9\uff0c\u7136\u540e\u6839\u636e\u6b64\u6bd4\u5bf9\u7ed3\u679c\uff0c\u5bf9\u6574\u4e2a\u540c\u6e90\u7ec4\u8fdb\u884c\u91cd\u547d\u540d\u548c\u8c03\u6574\u65b9\u5411\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728<code>scaffolding</code>\u6b65\u9aa4\u7684\u65f6\u5019\u5df2\u7ecf\u628a\u540c\u6e90\u67d3\u8272\u4f53\u7684\u65b9\u5411\u8c03\u6574\u4e3a\u4e00\u81f4\u4e86\u3002\u5982\u679c\u4f60\u9700\u8981\u5bf9\u6240\u7528\u540c\u6e90\u7ec4\u5185\u7684\u67d3\u8272\u4f53\u8fdb\u884c\u6bd4\u5bf9\uff0c\u53ef\u4ee5\u8bbe\u7f6e<code>--unphased</code>\u53c2\u6570\u5b9e\u73b0\u3002</p>"},{"location":"zh/faq/","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"zh/faq/#_1","title":"\u7b2c\u4e00\u8f6e\u5206\u7ec4\u7684\u7ed3\u679c\u4e0d\u597d:","text":"<p>\u5728\u6211\u4eec\u7684\u4e24\u8f6e\u805a\u7c7b\u7b97\u6cd5\u4e2d\uff0c\u7b2c\u4e00\u8f6e\u805a\u7c7b\u4f9d\u8d56\u4e8e\u540c\u6e90\u67d3\u8272\u4f53\u4e4b\u95f4\u6bd4\u5bf9\u9519\u8bef\uff1b\u5982\u679c\u7528\u6237\u8f93\u5165\u4f4e\u6c34\u5e73Switch error\u7684contigs\u6216\u8f93\u5165\u9ad8\u7cbe\u5ea6\u7684Pore-c\u6570\u636e\uff0ch-trans\u5c06\u4e0d\u8db3\u4ee5\u652f\u6491\u5c06\u6765\u81ea\u540c\u6e90\u67d3\u8272\u4f53\u7684contig\u805a\u5230\u4e00\u8d77\uff0c\u8fd9\u5bb9\u6613\u5bfc\u81f4\u7ed3\u679c\u4e0d\u7406\u60f3\u3002\u7528\u6237\u53ef\u4ee5\u4e3a<code>hyperpartition</code>\u6216<code>pipeline</code>\u8bbe\u7f6e<code>-q1 0</code>\u4ee5\u589e\u52a0h-trans\u9519\u8bef\u7387\u3002\u4f46\u662f\uff0c\u5f53\u60a8\u5728\u5b54\u8868\u6216\u914d\u5bf9\u6587\u4ef6\u4e2d\u8f93\u5165\u5927\u91cf\u7684Pore-C\u6570\u636e\u65f6\uff0c\u6b64\u53c2\u6570\u53ef\u80fd\u4f1a\u5f15\u53d1\u5185\u5b58\u4e0d\u8db3\u7684\u9519\u8bef\u3002 </p>"},{"location":"zh/faq/#-n","title":"\u5982\u4f55\u5728\u7ec4\u88c5\u975e\u6574\u500d\u4f53\u57fa\u56e0\u7ec4\u65f6\u8bbe\u7f6e<code>-n</code>\u53c2\u6570:","text":"<p>\u975e\u6574\u500d\u4f53\u57fa\u56e0\u7ec4\uff0c\u5982\u73b0\u4ee3\u683d\u57f9\u7684\u7518\u8517\uff0c\u5305\u542b\u6570\u76ee\u4e0d\u76f8\u7b49\u7684\u540c\u6e90\u67d3\u8272\u4f53\u3002\u6211\u4eec\u5efa\u8bae<code>-n</code>\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u96f6\uff08<code>-n 0:0</code>\uff09\uff0c\u8ba9\u7a0b\u5e8f\u81ea\u52a8\u5224\u522b\u5206\u7ec4\u6570 \u4f46\u662f\uff0c\u6211\u4eec\u4e5f\u5141\u8bb8\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u5305\u542b\u4e24\u5217\u7684\u6587\u4ef6\uff1a\u7b2c\u4e00\u5217\u662f\u7b2c\u4e00\u8f6e\u5206\u533a\u7684\u7d22\u5f15\uff081-base\uff09\uff0c\u7b2c\u4e8c\u5217\u662f\u6bcf\u4e2a\u540c\u6e90\u67d3\u8272\u4f53\u7684\u67d3\u8272\u4f53\u7f16\u53f7\u3002\u7136\u540e\u6307\u5b9a<code>- n10:second.number.tsv</code>\u3002\u5728<code>cphasing pipeline</code>\u6216<code>cphasing hyperpartition</code>\u4e2d\u4f7f\u7528\u3002</p> second.number.tsv<pre><code>1    13\n2    12\n3    12\n4    11\n5    10\n6    12\n7    12\n8    10\n9    12\n10    12\n</code></pre>"}]}